//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace EF_test1.Models
{
    public partial class userrole : System.Data.Objects.DataClasses.EntityObject
    {
        #region Primitive Properties
    
        public virtual string userroleid
        {
            get;
            set;
        }
    
        public virtual string roleid
        {
            get { return _roleid; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_roleid != value)
                    {
                        if (role != null && role.roleid != value)
                        {
                            role = null;
                        }
                        _roleid = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _roleid;
    
        public virtual string userid
        {
            get { return _userid; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_userid != value)
                    {
                        if (users != null && users.userid != value)
                        {
                            users = null;
                        }
                        _userid = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _userid;
    
        public virtual string username
        {
            get;
            set;
        }
    
        public virtual string modifyuserid
        {
            get;
            set;
        }
    
        public virtual string modifyname
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> modifydate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual role role
        {
            get { return _role; }
            set
            {
                if (!ReferenceEquals(_role, value))
                {
                    var previousValue = _role;
                    _role = value;
                    Fixuprole(previousValue);
                }
            }
        }
        private role _role;
    
        public virtual users users
        {
            get { return _users; }
            set
            {
                if (!ReferenceEquals(_users, value))
                {
                    var previousValue = _users;
                    _users = value;
                    Fixupusers(previousValue);
                }
            }
        }
        private users _users;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void Fixuprole(role previousValue)
        {
            if (previousValue != null && previousValue.userrole.Contains(this))
            {
                previousValue.userrole.Remove(this);
            }
    
            if (role != null)
            {
                if (!role.userrole.Contains(this))
                {
                    role.userrole.Add(this);
                }
                if (roleid != role.roleid)
                {
                    roleid = role.roleid;
                }
            }
            else if (!_settingFK)
            {
                roleid = null;
            }
        }
    
        private void Fixupusers(users previousValue)
        {
            if (previousValue != null && previousValue.userrole.Contains(this))
            {
                previousValue.userrole.Remove(this);
            }
    
            if (users != null)
            {
                if (!users.userrole.Contains(this))
                {
                    users.userrole.Add(this);
                }
                if (userid != users.userid)
                {
                    userid = users.userid;
                }
            }
            else if (!_settingFK)
            {
                userid = null;
            }
        }

        #endregion
    }
}
